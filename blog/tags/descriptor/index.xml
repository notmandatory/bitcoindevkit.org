<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>descriptor on Bitcoin Dev Kit</title>
    <link>https://bitcoindevkit.org/blog/tags/descriptor/</link>
    <description>Recent content in descriptor on Bitcoin Dev Kit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bitcoindevkit.org/blog/tags/descriptor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spending Policy Demo</title>
      <link>https://bitcoindevkit.org/blog/2021/02/spending-policy-demo/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2021/02/spending-policy-demo/</guid>
      <description>In this post we will use the bdk-cli tool to demonstrate how to use the bdk library to:
 generate testnet public and private keys create PSBTs that can be spent based on different miniscript spending policies cooperatively sign and finalize the resulting PSBTs broadcast and confirm spending transactions  The scenario we will simulate is a wallet with two spending policies:
A. three out of three signers must sign spending transaction input UTXOs, OR</description>
    </item>
    
    <item>
      <title>Descriptors in the wild</title>
      <link>https://bitcoindevkit.org/blog/2020/11/descriptors-in-the-wild/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2020/11/descriptors-in-the-wild/</guid>
      <description>I have tried to setup a 2 of 2 multi signature infrastructure with two different wallets, which know nothing about each other, but are compliant with two very important protocols: Output Descriptors and Partially Signed Bitcoin Transactions described in BIP 174.
Before these two protocols came into existence, making a multi signature setup and spending from it was possible only if the involved parties were using the same wallet (eg. Electrum Desktop Wallet).</description>
    </item>
    
  </channel>
</rss>
