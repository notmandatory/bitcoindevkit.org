<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>release on Bitcoin Dev Kit</title>
    <link>https://bitcoindevkit.org/blog/tags/release/</link>
    <description>Recent content in release on Bitcoin Dev Kit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bitcoindevkit.org/blog/tags/release/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Release v0.8.0</title>
      <link>https://bitcoindevkit.org/blog/2021/06/release-v0.8.0/</link>
      <pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2021/06/release-v0.8.0/</guid>
      <description>A new release of BDK is out: v0.8.0 brings new APIs and other minor bugfixes and internal improvements.
You can find the full v0.8.0 changelog on GitHub.
What&amp;rsquo;s new in v0.8.0 Below are some highlights of the new release:
Getting the Derivation Index The Wallet::get_address() method now returns an AddressInfo structure, rather than a simple Address. This new structure contains the address but also the derivation index, which can be useful in some contexts.</description>
    </item>
    
    <item>
      <title>Release v0.7.0</title>
      <link>https://bitcoindevkit.org/blog/2021/05/release-v0.7.0/</link>
      <pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2021/05/release-v0.7.0/</guid>
      <description>A new release of BDK is out: v0.7.0 improved APIs, a more robust signing process and various bugfixes and improvements.
You can find the full v0.7.0 changelog on GitHub.
What&amp;rsquo;s new in v0.7.0 Below are some highlights of the new release:
New Signing API The Wallet::sign() method has been updated to take a mutable reference to a PSBT rather than consuming it entirely. This makes it easier to sign the same PSBT multiple times with different signers:</description>
    </item>
    
    <item>
      <title>Release v0.6.0</title>
      <link>https://bitcoindevkit.org/blog/2021/04/release-v0.6.0/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2021/04/release-v0.6.0/</guid>
      <description>A new release of BDK is out: v0.6.0 brings some new API calls, renamed types and some bugfixes.
You can find the full v0.6.0 changelog on GitHub.
What&amp;rsquo;s new in v0.6.0 Below are some highlights of the new release:
A new way to generate addresses The old get_new_address() method has been upgraded into a more generic get_address(), which takes a AddressIndex argument. AddressIndex is defined as an enum with the following variants:</description>
    </item>
    
    <item>
      <title>Release v0.5.0</title>
      <link>https://bitcoindevkit.org/blog/2021/03/release-v0.5.0/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2021/03/release-v0.5.0/</guid>
      <description>A new release of BDK is out: v0.5.0 is our first release licensed under Apache 2.0 and MIT, brings new features, bugfixes and some internal refactoring.
You can find the full v0.5.0 changelog on GitHub.
What&amp;rsquo;s new in v0.5.0 Below are some highlights of the new release:
Dual Licensing From now on BDK will be released under both Apache 2.0 and MIT, at your discretion. This change aligns our project with many other Rust crates and reiterates our commitment to a permissive licensing model.</description>
    </item>
    
    <item>
      <title>Release v0.4.0</title>
      <link>https://bitcoindevkit.org/blog/2021/02/release-v0.4.0/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2021/02/release-v0.4.0/</guid>
      <description>A new release of BDK is out: the v0.4.0 release brings updated dependencies, more sanity checks and an overhauled API to build transactions.
You can find the full v0.4.0 changelog on GitHub.
What&amp;rsquo;s new in v0.4.0 Below are some highlights of the new improved APIs coming with this release:
A new API to build transaction The star of this release is the new API designed and implemented by @llfourn that brings much more flexibility to the way we create transactions: originally the process of making a transaction involved the creation of a TxBuilder which was used to configure how the wallet should build the transaction.</description>
    </item>
    
    <item>
      <title>Release v0.3.0</title>
      <link>https://bitcoindevkit.org/blog/2021/01/release-v0.3.0/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2021/01/release-v0.3.0/</guid>
      <description>A new release of BDK is out: the v0.3.0 is a relatively small update compared to v0.2.0, but it still brings some nice APIs improvements and general bugfixes.
You can find the full v0.3.0 changelog on GitHub.
What&amp;rsquo;s new in v0.3.0 Below are some highlights of the new improved APIs coming with this release:
Less verbosity when using Wallet::new_offline() Now you don&amp;rsquo;t have to explicitly provide the OfflineWallet&amp;lt;_&amp;gt; type anymore, saving you one import and making it much less verbose to use.</description>
    </item>
    
    <item>
      <title>Release v0.2.0</title>
      <link>https://bitcoindevkit.org/blog/2020/12/release-v0.2.0/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bitcoindevkit.org/blog/2020/12/release-v0.2.0/</guid>
      <description>A new release of BDK is finally out! The v0.2.0 release contains many exciting new features, bug fixes and overall improvements. This release also marks the beginning of our new regular release schedule, which will see us pushing out a new release every four weeks. We think this is a good compromise to ensure that developers using BDK have access to all the new features and fixes as soon as possible, at least while the library is still evolving very fast as it is right now.</description>
    </item>
    
  </channel>
</rss>
