(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{463:function(t,e,s){"use strict";s.r(e);var a=s(18),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("h2",{attrs:{id:"requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),s("p",[t._v("The only requirement to run the "),s("code",[t._v("bdk-cli")]),t._v(" tool is a Linux/macOS system with a fairly recent Rust\ntoolchain installed. Since Linux distros tend to lag behind with updates, the quickest way to\ninstall the Rust compiler and Cargo is "),s("a",{attrs:{href:"https://rustup.rs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("rustup.rs"),s("OutboundLink")],1),t._v(". You can head there and\nfollow their instructions, after which you can test if everything went fine by running\n"),s("code",[t._v("cargo version")]),t._v(", which should print something like:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cargo 1.56.0 (4ed5d137b 2021-10-04)\n")])])]),s("p",[t._v("If you really don't want to pipe the output of "),s("code",[t._v("curl")]),t._v(" into "),s("code",[t._v("sh")]),t._v(", you can also try using a\n"),s("a",{attrs:{href:"https://hub.docker.com/_/rust",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker image"),s("OutboundLink")],1),t._v(" and working inside of it, but that's meant for more\nadvanced users and won't be covered in this guide.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("At the time of writing, the project requires cargo >= 1.46.0, which is our minimum supported rust version (MSRV) as of July 2021. If you have an older version installed with rustup.rs, you can upgrade it with "),s("code",[t._v("rustup update")]),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"installing-the-bdk-cli-tool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-bdk-cli-tool"}},[t._v("#")]),t._v(" Installing the "),s("code",[t._v("bdk-cli")]),t._v(" tool")]),t._v(" "),s("p",[t._v("Once Cargo is installed, you can proceed to install the interactive "),s("code",[t._v("bdk-cli")]),t._v(" tool directly from\nthe GitHub repository, by running:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all features with the blocking esplora client ")]),t._v("\ncargo "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --git https://github.com/bitcoindevkit/bdk-cli --features"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("esplora-ureq,compiler\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all features with the async esplora client ")]),t._v("\ncargo "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --git https://github.com/bitcoindevkit/bdk-cli --features"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("esplora-reqwest,compiler\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# minimal install (only repl feature is on by default)")]),t._v("\ncargo "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --git https://github.com/bitcoindevkit/bdk-cli\n")])])]),s("p",[t._v("This command may take a while to finish, since it will fetch and compile all the dependencies and the "),s("code",[t._v("bdk")]),t._v(" library itself.")]),t._v(" "),s("p",[t._v("Once it's done, you can check if everything went fine by running "),s("code",[t._v("bdk-cli --help")]),t._v(" which should print something like this:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("BDK CLI "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(".1-dev\nAlekos Filini "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("alekos.filini@gmail.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":Riccardo Casatta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("riccardo@casatta.it"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":Steve Myers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("steve@notmandatory.org"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nTop level options and "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" modes\n\nUSAGE:\n    bdk-cli "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTIONS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SUBCOMMAND"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\nFLAGS:\n    -h, --help       Prints "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" information\n    -V, --version    Prints version information\n\nOPTIONS:\n    -n, --network "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NETWORK"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    Sets the network "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("default: testnet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nSUBCOMMANDS:\n    compile    Compile a miniscript policy to an output descriptor\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("       Prints this message or the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" of the given subcommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    key        Key management sub-commands\n    repl       Enter REPL "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" loop mode\n    wallet     Wallet options and sub-commands\n\n")])])]),s("p",[t._v("An example command to sync a testnet wallet to a default electrum server looks like this:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("bdk-cli wallet -w example --descriptor "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wpkh(tprv8ZgxMBicQKsPexGYyaFwnAsCXCjmz2FaTm6LtesyyihjbQE3gRMfXqQBXKM43DvC1UgRVv1qom1qFxNMSqVAs88qx9PhgFnfGVUdiiDf6j4/0/*)"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);